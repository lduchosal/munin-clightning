#!/bin/sh
# -*- sh -*-
# vim: ft=sh

: << =cut

=head1 NAME

clightning_pays_amount - Plugin to monitor your pays on the lightning network

=head1 CONFIGURATION

 [clightning_*]
    user bitcoin
    env.binary lightning-cli
    env.data_dir /var/db/c-lightning

=head1 AUTHOR

Luc Dvchosal

=head1 LICENSE

AGPLv3+

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf

=cut

BINARY=${binary:-"/usr/bin/lightning-cli"}
DATA_DIR=${data_dir:-"/var/db/c-lightning"}

if [ "$1" == "test" ] \
   || [ "$1" == "test2" ]; then
    echo 
    echo "# "
    echo "# $0 $1"
    echo "# "
    echo 
fi



if [ ! -f "$BINARY" ]; then
    echo $0 $BINARY not found
    BINARY=/bin/echo
fi


if [ "$1" = "autoconf" ]; then
    autoconf="yes"

    command -v $BINARY >/dev/null || autoconf="no"

    echo $autoconf
    exit 0
fi

listpays=$($BINARY --lightning-dir=$DATA_DIR listpays)

if [ "$1" = "test" ]; then

   listpays=$(cat <<__EOF__
{
   "pays": [
      {
         "bolt11": "bolt11",
         "destination": "destination",
         "payment_hash": "payment_hash",
         "status": "complete",
         "created_at": 1628762052,
         "preimage": "preimage",
         "amount_msat": "1000000msat",
         "amount_sent_msat": "1000000msat"
      },
      {
         "bolt11": "bolt11",
         "destination": "destination",
         "payment_hash": "payment_hash",
         "status": "failed",
         "created_at": 1628762052,
         "preimage": "preimage",
         "amount_msat": "1000000msat",
         "amount_sent_msat": "1000000msat"
      },
      {
         "bolt11": "bolt11",
         "destination": "destination",
         "payment_hash": "payment_hash",
         "status": "pending",
         "created_at": 1628762052,
         "preimage": "preimage",
         "amount_msat": "1000000msat",
         "amount_sent_msat": "1000000msat"
      }
   ]
}
__EOF__
)

fi

if [ "$1" = "test2" ]; then

   listpays=$(cat <<__EOF__
{
   "pays": []
}
__EOF__
)

fi

jsont=$(cat <<__EOF__
{

   "total": [
      [ 
         .pays[] 
            | .amount_msat 
            | sub("msat";"") 
            | tonumber 
            / 1000
      ], [0]
   ] 
      | add 
      | add,

   
   "complete": [
      [ 
         .pays[] 
            | select(.status == "complete") 
            | .amount_msat 
            | sub("msat";"") 
            | tonumber 
            / 1000
      ], [0]
   ] 
      | add 
      | add,

      
   "failed": [
      [ 
         .pays[] 
            | select(.status == "failed") 
            | .amount_msat 
            | sub("msat";"") 
            | tonumber 
            / 1000
      ], [0]
   ] 
      | add 
      | add,


      
   "pending": [
      [ 
         .pays[] 
            | select(.status == "pending") 
            | .amount_msat 
            | sub("msat";"") 
            | tonumber 
            / 1000
      ], [0]
   ] 
      | add 
      | add,

}
__EOF__
)

result=$(echo $listpays | jq "$(echo $jsont)")

if [ "$2" = "debug" ]; then
    echo $listpays | jq
    echo $result | jq
fi

if [ "$1" = "config" ]; then

    echo 'graph_title Pays amount'
    echo 'graph_vlabel sats'
    echo 'graph_category clightning'
    echo 'graph_info This graph shows the pays on your clightning node.'
    
    echo 'total.label total'
    echo 'complete.label complete'
    echo 'failed.label failed'
    echo 'pending.label pending'

    exit 0
fi

echo "total.value $(echo $result | jq -r '.total')"
echo "complete.value $(echo $result | jq -r '.complete')"
echo "failed.value $(echo $result | jq -r '.failed')"
echo "pending.value $(echo $result | jq -r '.pending')"
